{
  _on_attach = <function 1>,
  attached_buffers = { true },
  cancel_request = <function 2>,
  commands = {},
  config = {
    _on_attach = <function 3>,
    autostart = true,
    capabilities = {
      callHierarchy = {
        dynamicRegistration = false
      },
      textDocument = {
        codeAction = {
          codeActionLiteralSupport = {
            codeActionKind = {
              valueSet = { "", "Empty", "QuickFix", "Refactor", "RefactorExtract", "RefactorInline", "RefactorRewrite", "Source", "SourceOrganizeImports", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }
            }
          },
          dataSupport = true,
          dynamicRegistration = false,
          isPreferredSupport = true,
          resolveSupport = {
            properties = { "edit" }
          }
        },
        completion = {
          completionItem = {
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionItemKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
          },
          contextSupport = false,
          dynamicRegistration = false
        },
        declaration = {
          linkSupport = true
        },
        definition = {
          linkSupport = true
        },
        documentHighlight = {
          dynamicRegistration = false
        },
        documentSymbol = {
          dynamicRegistration = false,
          hierarchicalDocumentSymbolSupport = true,
          symbolKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
          }
        },
        hover = {
          contentFormat = { "markdown", "plaintext" },
          dynamicRegistration = false
        },
        implementation = {
          linkSupport = true
        },
        publishDiagnostics = {
          relatedInformation = true,
          tagSupport = {
            valueSet = { 1, 2 }
          }
        },
        references = {
          dynamicRegistration = false
        },
        rename = {
          dynamicRegistration = false,
          prepareSupport = true
        },
        signatureHelp = {
          dynamicRegistration = false,
          signatureInformation = {
            activeParameterSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            parameterInformation = {
              labelOffsetSupport = true
            }
          }
        },
        synchronization = {
          didSave = true,
          dynamicRegistration = false,
          willSave = false,
          willSaveWaitUntil = false
        },
        typeDefinition = {
          linkSupport = true
        }
      },
      window = {
        showDocument = {
          support = false
        },
        showMessage = {
          messageActionItem = {
            additionalPropertiesSupport = false
          }
        },
        workDoneProgress = true
      },
      workspace = {
        applyEdit = true,
        configuration = true,
        symbol = {
          dynamicRegistration = false,
          hierarchicalWorkspaceSymbolSupport = true,
          symbolKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
          }
        },
        workspaceEdit = {
          resourceOperations = { "rename", "create", "delete" }
        },
        workspaceFolders = true
      }
    },
    cmd = { "lua-language-server" },
    cmd_cwd = "/home/srendonsoto2123/.config/nvim",
    cmd_env = {
      PATH = "/home/srendonsoto2123/.local/share/nvim/lsp_servers/sumneko_lua/extension/server/bin:/home/srendonsoto2123/.cargo/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/var/lib/snapd/snap/bin:/usr/share/dotnet:/home/srendonsoto2123/.local/share/gem/ruby/3.0.0/bin"
    },
    filetypes = { "lua" },
    flags = {},
    get_language_id = <function 4>,
    handlers = <1>{},
    init_options = vim.empty_dict(),
    log_level = 2,
    message_level = 2,
    name = "sumneko_lua",
    on_attach = <function 5>,
    on_exit = <function 6>,
    on_init = <function 7>,
    root_dir = "/home/srendonsoto2123/.config/nvim",
    settings = {
      Lua = {
        telemetry = {
          enable = false
        }
      }
    },
    single_file_support = true,
    workspace_folders = <2>{ {
        name = "/home/srendonsoto2123/.config/nvim",
        uri = "file:///home/srendonsoto2123/.config/nvim"
      } },
    <metatable> = <3>{
      __tostring = <function 8>
    }
  },
  handlers = <table 1>,
  id = 1,
  initialized = true,
  is_stopped = <function 9>,
  messages = {
    messages = {},
    name = "sumneko_lua",
    progress = {},
    status = {}
  },
  name = "sumneko_lua",
  notify = <function 10>,
  offset_encoding = "utf-16",
  request = <function 11>,
  request_sync = <function 12>,
  requests = {},
  resolved_capabilities = {
    call_hierarchy = false,
    code_action = <4>{
      codeActionKinds = { "", "quickfix", "refactor.rewrite", "refactor.extract" },
      resolveProvider = false
    },
    code_lens = false,
    code_lens_resolve = false,
    completion = true,
    declaration = false,
    document_formatting = true,
    document_highlight = true,
    document_range_formatting = true,
    document_symbol = true,
    execute_command = true,
    find_references = true,
    goto_definition = true,
    hover = true,
    implementation = false,
    rename = true,
    signature_help = true,
    signature_help_trigger_characters = <5>{ "(", "," },
    text_document_did_change = 2,
    text_document_open_close = true,
    text_document_save = false,
    text_document_save_include_text = false,
    text_document_will_save = false,
    text_document_will_save_wait_until = false,
    type_definition = true,
    workspace_folder_properties = {
      changeNotifications = true,
      supported = true
    },
    workspace_symbol = true
  },
  rpc = {
    is_closing = <function 13>,
    notify = <function 14>,
    request = <function 15>,
    terminate = <function 16>
  },
  server_capabilities = {
    codeActionProvider = <table 4>,
    colorProvider = true,
    completionProvider = {
      resolveProvider = true,
      triggerCharacters = { "\t", "\n", ".", ":", "(", "'", '"', "[", ",", "#", "*", "@", "|", "=", "-", "{", " ", "+", "?" }
    },
    definitionProvider = true,
    documentFormattingProvider = true,
    documentHighlightProvider = true,
    documentOnTypeFormattingProvider = {
      firstTriggerCharacter = "\n"
    },
    documentRangeFormattingProvider = true,
    documentSymbolProvider = true,
    executeCommandProvider = {
      commands = { "lua.removeSpace", "lua.solve", "lua.jsonToLua", "lua.setConfig", "lua.autoRequire" }
    },
    foldingRangeProvider = true,
    hoverProvider = true,
    inlayHintProvider = {
      resolveProvider = true
    },
    offsetEncoding = "utf-16",
    referencesProvider = true,
    renameProvider = {
      prepareProvider = true
    },
    semanticTokensProvider = {
      full = true,
      legend = {
        tokenModifiers = { "declaration", "definition", "readonly", "static", "deprecated", "abstract", "async", "modification", "documentation", "defaultLibrary" },
        tokenTypes = { "namespace", "type", "class", "enum", "interface", "struct", "typeParameter", "parameter", "variable", "property", "enumMember", "event", "function", "method", "macro", "keyword", "modifier", "comment", "string", "number", "regexp", "operator", "decorator" }
      },
      range = true
    },
    signatureHelpProvider = {
      triggerCharacters = <table 5>
    },
    textDocumentSync = {
      change = 2,
      openClose = true
    },
    typeDefinitionProvider = true,
    workspace = {
      workspaceFolders = {
        changeNotifications = true,
        supported = true
      }
    },
    workspaceSymbolProvider = true
  },
  stop = <function 17>,
  supports_method = <function 18>,
  workspaceFolders = <table 2>,
  workspace_did_change_configuration = <function 19>,
  workspace_folders = <table 2>,
  <metatable> = {
    __index = <function 20>
  }
}{
  _on_attach = <function 1>,
  attached_buffers = { true },
  cancel_request = <function 2>,
  commands = {},
  config = {
    _on_attach = <function 3>,
    autostart = true,
    capabilities = {
      callHierarchy = {
        dynamicRegistration = false
      },
      textDocument = {
        codeAction = {
          codeActionLiteralSupport = {
            codeActionKind = {
              valueSet = { "", "Empty", "QuickFix", "Refactor", "RefactorExtract", "RefactorInline", "RefactorRewrite", "Source", "SourceOrganizeImports", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }
            }
          },
          dataSupport = true,
          dynamicRegistration = false,
          isPreferredSupport = true,
          resolveSupport = {
            properties = { "edit" }
          }
        },
        completion = {
          completionItem = {
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionItemKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
          },
          contextSupport = false,
          dynamicRegistration = false
        },
        declaration = {
          linkSupport = true
        },
        definition = {
          linkSupport = true
        },
        documentHighlight = {
          dynamicRegistration = false
        },
        documentSymbol = {
          dynamicRegistration = false,
          hierarchicalDocumentSymbolSupport = true,
          symbolKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
          }
        },
        hover = {
          contentFormat = { "markdown", "plaintext" },
          dynamicRegistration = false
        },
        implementation = {
          linkSupport = true
        },
        publishDiagnostics = {
          relatedInformation = true,
          tagSupport = {
            valueSet = { 1, 2 }
          }
        },
        references = {
          dynamicRegistration = false
        },
        rename = {
          dynamicRegistration = false,
          prepareSupport = true
        },
        signatureHelp = {
          dynamicRegistration = false,
          signatureInformation = {
            activeParameterSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            parameterInformation = {
              labelOffsetSupport = true
            }
          }
        },
        synchronization = {
          didSave = true,
          dynamicRegistration = false,
          willSave = false,
          willSaveWaitUntil = false
        },
        typeDefinition = {
          linkSupport = true
        }
      },
      window = {
        showDocument = {
          support = false
        },
        showMessage = {
          messageActionItem = {
            additionalPropertiesSupport = false
          }
        },
        workDoneProgress = true
      },
      workspace = {
        applyEdit = true,
        configuration = true,
        symbol = {
          dynamicRegistration = false,
          hierarchicalWorkspaceSymbolSupport = true,
          symbolKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
          }
        },
        workspaceEdit = {
          resourceOperations = { "rename", "create", "delete" }
        },
        workspaceFolders = true
      }
    },
    cmd = { "lua-language-server" },
    cmd_cwd = "/home/srendonsoto2123/.config/nvim",
    cmd_env = {
      PATH = "/home/srendonsoto2123/.local/share/nvim/lsp_servers/sumneko_lua/extension/server/bin:/home/srendonsoto2123/.cargo/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/var/lib/snapd/snap/bin:/usr/share/dotnet:/home/srendonsoto2123/.local/share/gem/ruby/3.0.0/bin"
    },
    filetypes = { "lua" },
    flags = {},
    get_language_id = <function 4>,
    handlers = <1>{},
    init_options = vim.empty_dict(),
    log_level = 2,
    message_level = 2,
    name = "sumneko_lua",
    on_attach = <function 5>,
    on_exit = <function 6>,
    on_init = <function 7>,
    root_dir = "/home/srendonsoto2123/.config/nvim",
    settings = {
      Lua = {
        telemetry = {
          enable = false
        }
      }
    },
    single_file_support = true,
    workspace_folders = <2>{ {
        name = "/home/srendonsoto2123/.config/nvim",
        uri = "file:///home/srendonsoto2123/.config/nvim"
      } },
    <metatable> = <3>{
      __tostring = <function 8>
    }
  },
  handlers = <table 1>,
  id = 1,
  initialized = true,
  is_stopped = <function 9>,
  messages = {
    messages = {},
    name = "sumneko_lua",
    progress = {},
    status = {}
  },
  name = "sumneko_lua",
  notify = <function 10>,
  offset_encoding = "utf-16",
  request = <function 11>,
  request_sync = <function 12>,
  requests = {},
  resolved_capabilities = {
    call_hierarchy = false,
    code_action = <4>{
      codeActionKinds = { "", "quickfix", "refactor.rewrite", "refactor.extract" },
      resolveProvider = false
    },
    code_lens = false,
    code_lens_resolve = false,
    completion = true,
    declaration = false,
    document_formatting = true,
    document_highlight = true,
    document_range_formatting = true,
    document_symbol = true,
    execute_command = true,
    find_references = true,
    goto_definition = true,
    hover = true,
    implementation = false,
    rename = true,
    signature_help = true,
    signature_help_trigger_characters = <5>{ "(", "," },
    text_document_did_change = 2,
    text_document_open_close = true,
    text_document_save = false,
    text_document_save_include_text = false,
    text_document_will_save = false,
    text_document_will_save_wait_until = false,
    type_definition = true,
    workspace_folder_properties = {
      changeNotifications = true,
      supported = true
    },
    workspace_symbol = true
  },
  rpc = {
    is_closing = <function 13>,
    notify = <function 14>,
    request = <function 15>,
    terminate = <function 16>
  },
  server_capabilities = {
    codeActionProvider = <table 4>,
    colorProvider = true,
    completionProvider = {
      resolveProvider = true,
      triggerCharacters = { "\t", "\n", ".", ":", "(", "'", '"', "[", ",", "#", "*", "@", "|", "=", "-", "{", " ", "+", "?" }
    },
    definitionProvider = true,
    documentFormattingProvider = true,
    documentHighlightProvider = true,
    documentOnTypeFormattingProvider = {
      firstTriggerCharacter = "\n"
    },
    documentRangeFormattingProvider = true,
    documentSymbolProvider = true,
    executeCommandProvider = {
      commands = { "lua.removeSpace", "lua.solve", "lua.jsonToLua", "lua.setConfig", "lua.autoRequire" }
    },
    foldingRangeProvider = true,
    hoverProvider = true,
    inlayHintProvider = {
      resolveProvider = true
    },
    offsetEncoding = "utf-16",
    referencesProvider = true,
    renameProvider = {
      prepareProvider = true
    },
    semanticTokensProvider = {
      full = true,
      legend = {
        tokenModifiers = { "declaration", "definition", "readonly", "static", "deprecated", "abstract", "async", "modification", "documentation", "defaultLibrary" },
        tokenTypes = { "namespace", "type", "class", "enum", "interface", "struct", "typeParameter", "parameter", "variable", "property", "enumMember", "event", "function", "method", "macro", "keyword", "modifier", "comment", "string", "number", "regexp", "operator", "decorator" }
      },
      range = true
    },
    signatureHelpProvider = {
      triggerCharacters = <table 5>
    },
    textDocumentSync = {
      change = 2,
      openClose = true
    },
    typeDefinitionProvider = true,
    workspace = {
      workspaceFolders = {
        changeNotifications = true,
        supported = true
      }
    },
    workspaceSymbolProvider = true
  },
  stop = <function 17>,
  supports_method = <function 18>,
  workspaceFolders = <table 2>,
  workspace_did_change_configuration = <function 19>,
  workspace_folders = <table 2>,
  <metatable> = {
    __index = <function 20>
  }
}{
  _on_attach = <function 1>,
  attached_buffers = { true,
    [75] = true
  },
  cancel_request = <function 2>,
  commands = {},
  config = {
    _on_attach = <function 3>,
    autostart = true,
    capabilities = {
      callHierarchy = {
        dynamicRegistration = false
      },
      textDocument = {
        codeAction = {
          codeActionLiteralSupport = {
            codeActionKind = {
              valueSet = { "", "Empty", "QuickFix", "Refactor", "RefactorExtract", "RefactorInline", "RefactorRewrite", "Source", "SourceOrganizeImports", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }
            }
          },
          dataSupport = true,
          dynamicRegistration = false,
          isPreferredSupport = true,
          resolveSupport = {
            properties = { "edit" }
          }
        },
        completion = {
          completionItem = {
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionItemKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
          },
          contextSupport = false,
          dynamicRegistration = false
        },
        declaration = {
          linkSupport = true
        },
        definition = {
          linkSupport = true
        },
        documentHighlight = {
          dynamicRegistration = false
        },
        documentSymbol = {
          dynamicRegistration = false,
          hierarchicalDocumentSymbolSupport = true,
          symbolKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
          }
        },
        hover = {
          contentFormat = { "markdown", "plaintext" },
          dynamicRegistration = false
        },
        implementation = {
          linkSupport = true
        },
        publishDiagnostics = {
          relatedInformation = true,
          tagSupport = {
            valueSet = { 1, 2 }
          }
        },
        references = {
          dynamicRegistration = false
        },
        rename = {
          dynamicRegistration = false,
          prepareSupport = true
        },
        signatureHelp = {
          dynamicRegistration = false,
          signatureInformation = {
            activeParameterSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            parameterInformation = {
              labelOffsetSupport = true
            }
          }
        },
        synchronization = {
          didSave = true,
          dynamicRegistration = false,
          willSave = false,
          willSaveWaitUntil = false
        },
        typeDefinition = {
          linkSupport = true
        }
      },
      window = {
        showDocument = {
          support = false
        },
        showMessage = {
          messageActionItem = {
            additionalPropertiesSupport = false
          }
        },
        workDoneProgress = true
      },
      workspace = {
        applyEdit = true,
        configuration = true,
        symbol = {
          dynamicRegistration = false,
          hierarchicalWorkspaceSymbolSupport = true,
          symbolKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
          }
        },
        workspaceEdit = {
          resourceOperations = { "rename", "create", "delete" }
        },
        workspaceFolders = true
      }
    },
    cmd = { "lua-language-server" },
    cmd_cwd = "/home/srendonsoto2123/.config/nvim",
    cmd_env = {
      PATH = "/home/srendonsoto2123/.local/share/nvim/lsp_servers/sumneko_lua/extension/server/bin:/home/srendonsoto2123/.cargo/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/var/lib/snapd/snap/bin:/usr/share/dotnet:/home/srendonsoto2123/.local/share/gem/ruby/3.0.0/bin"
    },
    filetypes = { "lua" },
    flags = {},
    get_language_id = <function 4>,
    handlers = <1>{},
    init_options = vim.empty_dict(),
    log_level = 2,
    message_level = 2,
    name = "sumneko_lua",
    on_attach = <function 5>,
    on_exit = <function 6>,
    on_init = <function 7>,
    root_dir = "/home/srendonsoto2123/.config/nvim",
    settings = {
      Lua = {
        telemetry = {
          enable = false
        }
      }
    },
    single_file_support = true,
    workspace_folders = <2>{ {
        name = "/home/srendonsoto2123/.config/nvim",
        uri = "file:///home/srendonsoto2123/.config/nvim"
      } },
    <metatable> = <3>{
      __tostring = <function 8>
    }
  },
  handlers = <table 1>,
  id = 1,
  initialized = true,
  is_stopped = <function 9>,
  messages = {
    messages = {},
    name = "sumneko_lua",
    progress = {
      [2] = {
        cancellable = false,
        done = true,
        percentage = 0,
        title = "Loading workspace"
      },
      [3] = {
        cancellable = false,
        done = true,
        percentage = 0,
        title = "Loading workspace"
      }
    },
    status = {}
  },
  name = "sumneko_lua",
  notify = <function 10>,
  offset_encoding = "utf-16",
  request = <function 11>,
  request_sync = <function 12>,
  requests = {},
  resolved_capabilities = {
    call_hierarchy = false,
    code_action = <4>{
      codeActionKinds = { "", "quickfix", "refactor.rewrite", "refactor.extract" },
      resolveProvider = false
    },
    code_lens = false,
    code_lens_resolve = false,
    completion = true,
    declaration = false,
    document_formatting = true,
    document_highlight = true,
    document_range_formatting = true,
    document_symbol = true,
    execute_command = true,
    find_references = true,
    goto_definition = true,
    hover = true,
    implementation = false,
    rename = true,
    signature_help = true,
    signature_help_trigger_characters = <5>{ "(", "," },
    text_document_did_change = 2,
    text_document_open_close = true,
    text_document_save = false,
    text_document_save_include_text = false,
    text_document_will_save = false,
    text_document_will_save_wait_until = false,
    type_definition = true,
    workspace_folder_properties = {
      changeNotifications = true,
      supported = true
    },
    workspace_symbol = true
  },
  rpc = {
    is_closing = <function 13>,
    notify = <function 14>,
    request = <function 15>,
    terminate = <function 16>
  },
  server_capabilities = {
    codeActionProvider = <table 4>,
    colorProvider = true,
    completionProvider = {
      resolveProvider = true,
      triggerCharacters = { "\t", "\n", ".", ":", "(", "'", '"', "[", ",", "#", "*", "@", "|", "=", "-", "{", " ", "+", "?" }
    },
    definitionProvider = true,
    documentFormattingProvider = true,
    documentHighlightProvider = true,
    documentOnTypeFormattingProvider = {
      firstTriggerCharacter = "\n"
    },
    documentRangeFormattingProvider = true,
    documentSymbolProvider = true,
    executeCommandProvider = {
      commands = { "lua.removeSpace", "lua.solve", "lua.jsonToLua", "lua.setConfig", "lua.autoRequire" }
    },
    foldingRangeProvider = true,
    hoverProvider = true,
    inlayHintProvider = {
      resolveProvider = true
    },
    offsetEncoding = "utf-16",
    referencesProvider = true,
    renameProvider = {
      prepareProvider = true
    },
    semanticTokensProvider = {
      full = true,
      legend = {
        tokenModifiers = { "declaration", "definition", "readonly", "static", "deprecated", "abstract", "async", "modification", "documentation", "defaultLibrary" },
        tokenTypes = { "namespace", "type", "class", "enum", "interface", "struct", "typeParameter", "parameter", "variable", "property", "enumMember", "event", "function", "method", "macro", "keyword", "modifier", "comment", "string", "number", "regexp", "operator", "decorator" }
      },
      range = true
    },
    signatureHelpProvider = {
      triggerCharacters = <table 5>
    },
    textDocumentSync = {
      change = 2,
      openClose = true
    },
    typeDefinitionProvider = true,
    workspace = {
      workspaceFolders = {
        changeNotifications = true,
        supported = true
      }
    },
    workspaceSymbolProvider = true
  },
  stop = <function 17>,
  supports_method = <function 18>,
  workspaceFolders = <table 2>,
  workspace_did_change_configuration = <function 19>,
  workspace_folders = <table 2>,
  <metatable> = {
    __index = <function 20>
  }
}{
  _on_attach = <function 1>,
  attached_buffers = { true,
    [16] = true,
    [75] = true
  },
  cancel_request = <function 2>,
  commands = {},
  config = {
    _on_attach = <function 3>,
    autostart = true,
    capabilities = {
      callHierarchy = {
        dynamicRegistration = false
      },
      textDocument = {
        codeAction = {
          codeActionLiteralSupport = {
            codeActionKind = {
              valueSet = { "", "Empty", "QuickFix", "Refactor", "RefactorExtract", "RefactorInline", "RefactorRewrite", "Source", "SourceOrganizeImports", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }
            }
          },
          dataSupport = true,
          dynamicRegistration = false,
          isPreferredSupport = true,
          resolveSupport = {
            properties = { "edit" }
          }
        },
        completion = {
          completionItem = {
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionItemKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
          },
          contextSupport = false,
          dynamicRegistration = false
        },
        declaration = {
          linkSupport = true
        },
        definition = {
          linkSupport = true
        },
        documentHighlight = {
          dynamicRegistration = false
        },
        documentSymbol = {
          dynamicRegistration = false,
          hierarchicalDocumentSymbolSupport = true,
          symbolKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
          }
        },
        hover = {
          contentFormat = { "markdown", "plaintext" },
          dynamicRegistration = false
        },
        implementation = {
          linkSupport = true
        },
        publishDiagnostics = {
          relatedInformation = true,
          tagSupport = {
            valueSet = { 1, 2 }
          }
        },
        references = {
          dynamicRegistration = false
        },
        rename = {
          dynamicRegistration = false,
          prepareSupport = true
        },
        signatureHelp = {
          dynamicRegistration = false,
          signatureInformation = {
            activeParameterSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            parameterInformation = {
              labelOffsetSupport = true
            }
          }
        },
        synchronization = {
          didSave = true,
          dynamicRegistration = false,
          willSave = false,
          willSaveWaitUntil = false
        },
        typeDefinition = {
          linkSupport = true
        }
      },
      window = {
        showDocument = {
          support = false
        },
        showMessage = {
          messageActionItem = {
            additionalPropertiesSupport = false
          }
        },
        workDoneProgress = true
      },
      workspace = {
        applyEdit = true,
        configuration = true,
        symbol = {
          dynamicRegistration = false,
          hierarchicalWorkspaceSymbolSupport = true,
          symbolKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
          }
        },
        workspaceEdit = {
          resourceOperations = { "rename", "create", "delete" }
        },
        workspaceFolders = true
      }
    },
    cmd = { "lua-language-server" },
    cmd_cwd = "/home/srendonsoto2123/.config/nvim",
    cmd_env = {
      PATH = "/home/srendonsoto2123/.local/share/nvim/lsp_servers/sumneko_lua/extension/server/bin:/home/srendonsoto2123/.cargo/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/var/lib/snapd/snap/bin:/usr/share/dotnet:/home/srendonsoto2123/.local/share/gem/ruby/3.0.0/bin"
    },
    filetypes = { "lua" },
    flags = {},
    get_language_id = <function 4>,
    handlers = <1>{},
    init_options = vim.empty_dict(),
    log_level = 2,
    message_level = 2,
    name = "sumneko_lua",
    on_attach = <function 5>,
    on_exit = <function 6>,
    on_init = <function 7>,
    root_dir = "/home/srendonsoto2123/.config/nvim",
    settings = {
      Lua = {
        telemetry = {
          enable = false
        }
      }
    },
    single_file_support = true,
    workspace_folders = <2>{ {
        name = "/home/srendonsoto2123/.config/nvim",
        uri = "file:///home/srendonsoto2123/.config/nvim"
      } },
    <metatable> = <3>{
      __tostring = <function 8>
    }
  },
  handlers = <table 1>,
  id = 1,
  initialized = true,
  is_stopped = <function 9>,
  messages = {
    messages = {},
    name = "sumneko_lua",
    progress = {
      [2] = {
        cancellable = false,
        done = true,
        percentage = 0,
        title = "Loading workspace"
      },
      [3] = {
        cancellable = false,
        done = true,
        percentage = 0,
        title = "Loading workspace"
      }
    },
    status = {}
  },
  name = "sumneko_lua",
  notify = <function 10>,
  offset_encoding = "utf-16",
  request = <function 11>,
  request_sync = <function 12>,
  requests = {},
  resolved_capabilities = {
    call_hierarchy = false,
    code_action = <4>{
      codeActionKinds = { "", "quickfix", "refactor.rewrite", "refactor.extract" },
      resolveProvider = false
    },
    code_lens = false,
    code_lens_resolve = false,
    completion = true,
    declaration = false,
    document_formatting = true,
    document_highlight = true,
    document_range_formatting = true,
    document_symbol = true,
    execute_command = true,
    find_references = true,
    goto_definition = true,
    hover = true,
    implementation = false,
    rename = true,
    signature_help = true,
    signature_help_trigger_characters = <5>{ "(", "," },
    text_document_did_change = 2,
    text_document_open_close = true,
    text_document_save = false,
    text_document_save_include_text = false,
    text_document_will_save = false,
    text_document_will_save_wait_until = false,
    type_definition = true,
    workspace_folder_properties = {
      changeNotifications = true,
      supported = true
    },
    workspace_symbol = true
  },
  rpc = {
    is_closing = <function 13>,
    notify = <function 14>,
    request = <function 15>,
    terminate = <function 16>
  },
  server_capabilities = {
    codeActionProvider = <table 4>,
    colorProvider = true,
    completionProvider = {
      resolveProvider = true,
      triggerCharacters = { "\t", "\n", ".", ":", "(", "'", '"', "[", ",", "#", "*", "@", "|", "=", "-", "{", " ", "+", "?" }
    },
    definitionProvider = true,
    documentFormattingProvider = true,
    documentHighlightProvider = true,
    documentOnTypeFormattingProvider = {
      firstTriggerCharacter = "\n"
    },
    documentRangeFormattingProvider = true,
    documentSymbolProvider = true,
    executeCommandProvider = {
      commands = { "lua.removeSpace", "lua.solve", "lua.jsonToLua", "lua.setConfig", "lua.autoRequire" }
    },
    foldingRangeProvider = true,
    hoverProvider = true,
    inlayHintProvider = {
      resolveProvider = true
    },
    offsetEncoding = "utf-16",
    referencesProvider = true,
    renameProvider = {
      prepareProvider = true
    },
    semanticTokensProvider = {
      full = true,
      legend = {
        tokenModifiers = { "declaration", "definition", "readonly", "static", "deprecated", "abstract", "async", "modification", "documentation", "defaultLibrary" },
        tokenTypes = { "namespace", "type", "class", "enum", "interface", "struct", "typeParameter", "parameter", "variable", "property", "enumMember", "event", "function", "method", "macro", "keyword", "modifier", "comment", "string", "number", "regexp", "operator", "decorator" }
      },
      range = true
    },
    signatureHelpProvider = {
      triggerCharacters = <table 5>
    },
    textDocumentSync = {
      change = 2,
      openClose = true
    },
    typeDefinitionProvider = true,
    workspace = {
      workspaceFolders = {
        changeNotifications = true,
        supported = true
      }
    },
    workspaceSymbolProvider = true
  },
  stop = <function 17>,
  supports_method = <function 18>,
  workspaceFolders = <table 2>,
  workspace_did_change_configuration = <function 19>,
  workspace_folders = <table 2>,
  <metatable> = {
    __index = <function 20>
  }
}